html {
    --backdrop: #FFFFFF;
    --primary: #D7CDCC;
    --secondary: burlywood;
    --accent: #9C528B;
    --lightaccent: #c390b7;
    --accent2: #5becd9;
}

body {
    margin: 0;
    font-family: 'Josefin Sans', sans-serif;
    cursor: url('/src/images/cursormain.png'), auto;
}

.mainclicked:not(button) {
    animation: mainclick 3000s;
    animation-iteration-count: infinite;
}

button, input{
    cursor: url('/src/images/cursorlink.png'), auto;
    font-family: 'Josefin Sans', sans-serif;
}

button:active, input:active{
    animation: linkclick 3000s;
    animation-iteration-count: infinite;
}

@keyframes linkclick {
    from {cursor: url('/src/images/cursorlinkdown.png'), auto;}
    to {cursor: url('/src/images/cursorlink.png'), auto;}
}

@keyframes mainclick {
    from {cursor: url('/src/images/cursormaindown.png'), auto;}
    to {cursor: url('/src/images/cursormain.png'), auto;}
}

h2 {
    margin: 10px 0px 10px 0;
}

#containerbox {
    display: flex;
    flex-direction: column;
}

#container {
    width: 100vw;
    height: 100vh;
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    grid-template-rows: 1fr 6fr;
    gap: 10px;
}

@media only screen and (min-width: 1200px) {
    #container {
        width: 1000px;
        align-self: center;
        background-color: var(--primary);
    }
    body {
        background-color: var(--primary);
    }
}


#header {
    background-color: var(--lightaccent);
    grid-column: span 3;
    display: flex;
    align-items: center;
    justify-content: space-between;
    box-shadow: 0px 5px 7px grey;
    padding: 15px;
    
}

#header>#points {
    font-size: 4rem;
}

#sidebar {
    background-color: var(--secondary);
    border-radius: 12px;
    box-shadow: 0px 5px 7px grey;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: all 1s;
    padding: 15px;
    gap: 15px;
    margin-bottom: 10px;
    position: relative;
}

#sidebar {
    margin-left: 10px;
}

#sidebar>#projectpanel {
    display: grid;
    grid-template-columns: auto auto;
    column-gap: 15px;
    row-gap: 10px;
    align-items: end;
    justify-items: end;
}

#sidebar>#projectpanel>button {
    padding: 10px 13px;
    border-radius: 20px;
}

#taskcontainer {
    display: flex;
    flex-direction: column;
    gap: 10px;
    min-height: 0;
    overflow-y: scroll;
    -ms-overflow-style: none; 
    scrollbar-width: none; 
    border-radius: 12px;
    position: relative;
}

#tasks, #donetasks{
    background: var(--secondary);
    display: flex;
    flex-direction: column;
    padding: 15px 0px 15px 15px;
    align-items: start;
    border-radius: 12px;
    transition: all 1s;
    position: relative;
    box-shadow: 0px 5px 7px grey;
    
}

#taskcontainer::-webkit-scrollbar {
    display: none;
}

#tasks button#addtaskbtn {
    position: absolute;
    top: 15px;
    right: 15px;
}

#donetasks {
    background-color: var(--secondary);
    flex-grow: 1;
    position: relative;
    margin-bottom: 10px;
    padding-bottom: 40px;
}

@keyframes gradient {
	0% {
		background-position: 23% 50%;
	}

    90% {
		background-position: 120% 50%;
	}
    100% {
		background-position: 120% 50%;
	}
}

button:not(.checkbtn, #addpanelbox *):hover {
    background: var(--accent);
    background: linear-gradient(90deg, rgba(156,82,139,1) 0%, rgba(156,82,139,1) 40%, rgba(195,144,183,1) 50%, rgba(156,82,139,1) 60%, rgba(156,82,139,1) 100%);
    animation: gradient 1.5s ease infinite;
    background-size: 400% 400%;
}

button:not(.checkbtn, #addpanelbox *):active {
    animation: linkclick 3000s;
}

#donetasks>.task {
    filter: opacity(0.6)
}

#donetasks>.task.expanded {
    filter: opacity(1);
    
}

.task>.checkbtn {
    background-color: var(--accent);
    border-style: none;
    border-radius: 100%;
    height: 1rem;
    width: 1rem;
    transition: all 0.5s;
    color: transparent;
    position: relative;
    min-height: 1rem;
    min-width: 1rem;
}

.task>.checkbtn:hover {
    background-color: var(--lightaccent);
    border-color: var(--lightaccent);
    color: var(--accent);
}

.task .checksymbol {
    font-size: 1.3rem;
    position: absolute;
    left: 3px;
    top: -5px;
}

button:not(.checkbtn) {
    color: white;
    background-color: var(--accent);
    border-radius: 7px;
    border-style: none;
    
    padding: 5px 10px 5px 10px;
  

    box-shadow: 0 9px #999;
    margin-bottom: 9px;
}

button:not(.checkbtn):hover {
    background-color: var(--lightaccent);
}

button:not(.checkbtn):active {
    box-shadow: 0 5px #666;
    transform: translateY(4px);
}

.task {
    background-color: var(--primary);
    padding: 10px;
    border-radius: 15px;
    display: flex;
    align-items: start;
    gap: 15px;
    transition: all 0.4s;
    box-shadow: 0 9px #999;
    margin: 10px 10px 10px 0px;
}

.task.highpriority {
    background-color: var(--lightaccent);
}

.task.lowpriority {
    background-color: var(--accent2);
}

.task.highpriority:hover {
    background-color: #c07eb1;
}

.task.lowpriority:hover {
    background-color: #56d6c5;
}

.task>div {
    align-self: center;
    
}

.project {
    background-color: white;
    padding: 10px;
    border-radius: 15px;
    white-space: nowrap;
    transition: all 0.4s;
    box-shadow: 0 9px #999;
    margin: 10px 0px 9px;
}

.project.openproject {
    box-shadow: 0 3px #666;
    transform: translate(0, 6px);
    background-color: rgb(202, 202, 202);
    color: black;
}

.project:hover, #simbox>div>h3:hover {
    background-color: #ceb7b5;
}

.task.expanded {
    box-shadow: 0 18px #666;
}

.task:hover {
    background-color: #ceb7b5;
}

#addpanelbox {
    position: fixed;
    bottom: 0;
    right: 0;
    display: flex;
    align-items: flex-end;
    pointer-events: none;
    z-index: 2;
}
#addpanelbox * {
    pointer-events: all;
}

#addproject, #addtask {
    background-color: var(--accent);
    display: none;
    flex-direction: column;
    margin: 0 15px 15px 0;
    padding: 15px;
    border-radius: 12px;
    position: relative;
    width: 200px;
    box-shadow: 0px 5px 7px grey;
}

input:not([type='radio']) {
    margin: 5px 0 15px 0;
    padding: 7px 5px 5px 5px;
    outline: none;
    border-radius: 10px;
    border-style: none;
    box-shadow: inset -2px 4px 5px 0px rgb(141, 141, 141);
    transition: all 0.5s;
}

#radiobox {
    display: grid;
    grid-template-columns: auto auto;
    gap: 5px;
    margin: 10px 0 15px 0;
}

input[type='radio'] {
    appearance: none;
    -webkit-appearance: none;
    background-color: #fff;
    margin: 0;
    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    border-radius: 50%;
    display: grid;
    place-content: center;
    transition: all 0.5s;
}

input[type="radio"]::before {
    content: "";
    width: 0.75em;
    height: 0.75em;

    border-radius: 50%;
    transform: scale(0);
    transition: all 125ms ease-in;
    background-color: transparent;
}

input[type="radio"]:checked::before {
    transform: scale(1);
    background-color: black;
}

input:hover,
input:not([type='radio']):focus {
    background-color: var(--accent2);
}

label[for='high'], label[for='low'] {
    display: flex;
    align-items: end;
    gap: 10px;
}

#addproject {
    left: 0;
}   

#addtask {
    right: 0;
}

button#closetaskpanel, button#closeprojpanel {
    position: absolute;
    top: 15px;
    right: 15px;
}

#addpanelbox button {
    background-color: white;
    color: black;
}

#addpanelbox>*>button:hover {
    background-color: var(--primary);
}

footer {
    position: absolute;
    bottom: 5px;
    right: 5px;
}

#loretta {
    height: 200px;
    width: 100%;
    display: flex;
    justify-content: center;
    position: relative;
}

#loretta>img#lorettamain {
    height: 100%; 
    max-width: 200px;
    filter: drop-shadow(0 13px 10px grey);
}

#loretta>img#lorettahat {
    position: absolute;
    height: 100%;
    transform: translateY(-29%);
    pointer-events: none;
}

#simboxcontainer {
    position: relative;
}

#simbox {
    background-color: var(--secondary);
    border-radius: 12px;
    box-shadow: 0px 5px 7px grey;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: all 1s;
    padding: 15px;
    gap: 15px;
    margin-bottom: 10px;
    margin-right: 10px;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

#simbox>div>h3 {
    background-color: white;
    padding: 10px;
    border-radius: 15px;
    white-space: nowrap;
    transition: all 0.4s;
    box-shadow: 0 9px #999;
    margin: 0;
    align-self: start;
    transform: translate(0, -6px);
}

#simbox>#shop, #simbox>#inventory {
    background-color: white;
    width: 100%;
    border-radius: 15px;
    box-shadow: inset 0px 5px 7px grey;
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    min-height: calc(2rem + 9px);
    position: relative;
}

#simbox>div>div::-webkit-scrollbar {
    display: none;
}


#simbox>div>#shopgrid, #simbox>div>#inventorygrid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    border-radius: 0 0 15px 15px;
    gap: 10px;
    padding: 10px;
    overflow-y: scroll;
    -ms-overflow-style: none; 
    scrollbar-width: none;  
    transition: all 0.5s;
}



#simbox #gap {
    flex-grow: 1;
    background-color: black;
}

#simbox .openitems {
    box-shadow: 0 3px #666;
    transform: translate(0, 0px);
    background-color: rgb(202, 202, 202);
    color: black;
    margin-bottom: 5px;
    
}

#simbox .shopitem, #simbox .inventoryitem {
    aspect-ratio: 1;
    background-color: var(--accent);
    border-radius: 5px;
    position: relative;
    box-shadow: 0 4px black;
    transition: all 0.4s;
    position: relative;
}

#simbox .shopitem:hover, #simbox .inventoryitem:hover {
    background-color: var(--lightaccent);
}

.shopitem>img, .inventoryitem>img {
    position: absolute;
    height: 100%;
    width: 100%;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
}

.descbox {
    position: absolute;
    background-color: rgba(156,82,139,0.8);
    left: 0;
    bottom: 0;
    z-index: 2;
    border-radius: 15px;
    pointer-events: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    color: white;
    filter: opacity(0);
    transition: all 0.4s;
    text-align: center;
    white-space: nowrap;
    padding: 5px;
}

/* Offset description box based column item is in. */
.inventoryitem:nth-child(odd)>.descbox {
    right: 0;
    left: initial;
}

.shopitem:nth-child(odd)>.descbox {
    right: 0;
    left: initial;
}

#errorbox {
    position: fixed;
    font-size: 3rem;
    color: white;
    background-color: black;
    padding: 8px;
    border-radius: 10px;
    bottom: 15px;
    right: 15px;
    border: 5px solid var(--accent);
    display: none;
}

.indicator {
    z-index: 1;
    position: absolute;
    transform: rotate(90deg);
    background-color: rgba(255, 255, 255, 0.6);
    border-radius: 100%;
    height: 3rem;
    width: 3rem;
    filter: opacity(0);
    text-align: center;
    content: '>';
    font-size: 3rem;
    transition: transform 0.4s, bottom 0.6s ease-in-out, filter 0.4s;
    pointer-events: none;
}

#sidebar>.indicator {
    bottom: 15px;
    right: calc(-3rem - 20px);
}

#shopgrid>.indicator {
    filter: opacity(1);
    right: 15px;
}

#inventorygrid>.indicator {
    filter: opacity(1);
    right: 15px;
}